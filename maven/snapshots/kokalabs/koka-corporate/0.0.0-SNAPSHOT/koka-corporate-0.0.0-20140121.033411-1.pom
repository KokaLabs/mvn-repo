<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0  http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>kokalabs</groupId>
  <artifactId>koka-corporate</artifactId>
  <version>0.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <description>
    USAGE (as of v3.0+):
      Step 1: add this to the top of your pom:

      <![CDATA[
        <parent>
          <groupId>kokalabs</groupId>
          <artifactId>koka-corporate</artifactId>
          <version>0.0.0-SNAPSHOT</version>
        </parent>
      ]]>

      Step 2: Add the following to the BOTTOM of your dependencyManagement.
              (If you do not declare this last, then it will possibly override
              your project's dependencies.)

      <![CDATA[
        <dependencyManagement>
          <dependencies>

            <!-- your projects dependencies -->

            <dependency>
              <groupId>kokalabs</groupId>
              <artifactId>koka-corporate-dependencies</artifactId>
              <version>${version.corporate-dependencies}</version>
              <type>pom</type>
              <scope>import</scope>
            </dependency>
          </dependencies>
        </dependencyManagement>
      ]]>

    WHY SO COMPLICATED?
      Before, you only needed step 1, because that pom contained
      both a &lt;pluginManagement&gt; and a &lt;dependencyManagement&gt;

      This is problematic in example project x:
        x/
          x-bom/
            pom.xml              (parent ../pom.xml)
          x-module1/
            pom.xml              (parent ../pom.xml)
          pom.xml                (parent koka:koka-corporate)

      If you try to use x-bom, you will pull in versions for unrelated
      dependencies (guava, spring, etc.) because it indirectly inherits from
      koka-corporate.

      So you have to break that link like so:
        x/
          x-bom/
            pom.xml              (NO PARENT)
          x-module1/
            pom.xml              (parent ../pom.xml)
          pom.xml                (parent koka:koka-corporate)

      But this has 2 problems:
        1. Without a parent, x-bom inherits from the maven superpom. Thus
           plugin versions and properties are different from all other modules.
        2. You are unable to use maven-versions-plugin since you do not
           have a single top level pom that all modules lead back to.

      To fix these problems, you have to change both the project structure and
      the corporate pom.

      The optimal solution:
        x/
          x-bom/
            pom.xml              (parent ../pom.xml)
          x-module1/
            pom.xml              (parent ../x-parent/pom.xml)
          x-parent/
            pom.xml              (parent ../pom.xml)
                                 (imports koka:koka-corporate-dependencies)
          pom.xml                (parent koka:koka-corporate)

      With this setup, you standarize properties/plugin versions and have common
      dependency versions for everything except the bom.

    VOCABULARY:
      BOM: (Bill Of Materials)
           Group of dependency versions.
           koka:koka-corporate-dependencies is an example of a BOM
  </description>

  <distributionManagement>
    <repository>
        <id>internal.repo</id>
        <name>Temporary Staging Repository</name>
        <url>file://${built.repo.dir}</url>
    </repository>
  </distributionManagement>

  <modules>
    <module>dependencies</module>
  </modules>

  <prerequisites>
    <maven>3.0.3</maven>
  </prerequisites>

  <properties>
    <github.global.server>github</github.global.server>
    <built.repo.dir>${user.dir}/${build.dir.name}/mvn-repo</built.repo.dir>

    <real.project.version>5.2</real.project.version>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>

    <!-- maven-install-plugin -->
    <installAtEnd>true</installAtEnd>
    <!-- maven-deploy-plugin -->
    <deployAtEnd>true</deployAtEnd>

    <surefire.argLine>-Xmx2g -XX:MaxPermSize=512m ${surefire.argLine.additional}</surefire.argLine>
    <failsafe.argLine>-Xmx2g -XX:MaxPermSize=512m ${failsafe.argLine.additional}</failsafe.argLine>

    <surefire.argLine.additional />
    <failsafe.argLine.additional />

    <jacoco.report.tests>${project.build.directory}/jacoco-unit.exec</jacoco.report.tests>
    <!-- Dumps to same spot in multi-module project for sonar to see properly -->
    <jacoco.report.itests>${user.dir}/${build.dir.name}/jacoco-it.exec</jacoco.report.itests>

    <!-- sigh, only way to work on both cmd line and in eclipse -->
    <checkstyle-prefix>${settings.localRepository}/koka/koka-codequality/${version.koka-codequality}/koka-codequality-${version.koka-codequality}-</checkstyle-prefix>

    <codequality.phase>none</codequality.phase>

    <!-- Allows output directory to be overridden -->
    <build.dir.name>target</build.dir.name>

    <!--
      Error messages to display for dependencies that shouldn't be used.
      IMPORTANT: do not use ":" in replacement msg. Eclipse will not like it.
    -->
    <_replaced.by>99-EXCLUDE_ME_AND_USE-</_replaced.by>
    <_excluded>99-EXCLUDE_ME_BECAUSE-</_excluded>

    <version.koka-corporate-dependencies>0.0.0-SNAPSHOT</version.koka-corporate-dependencies>

    <!-- Declare here if has to be used in multiple places -->
    <version.animal-sniffer-enforcer-rule>1.9</version.animal-sniffer-enforcer-rule>
    <version.en-chunker>1.5</version.en-chunker>
    <version.en-pos-maxent>1.5</version.en-pos-maxent>
    <version.en-sent>1.5</version.en-sent>
    <version.en-token>1.5</version.en-token>
    <version.extra-enforcer-rules>1.0-beta-2</version.extra-enforcer-rules>
    <version.guava>16.0</version.guava>
    <version.hamcrest>1.3</version.hamcrest>
    <version.jaxb2-value-constructor>3.0</version.jaxb2-value-constructor>
    <version.jaxb2-basics>0.6.5</version.jaxb2-basics>
    <version.jaxb2-basics-runtime>${version.jaxb2-basics}</version.jaxb2-basics-runtime>
    <version.jetty>8.1.14.v20131031</version.jetty>
    <version.lucene>4.6.0</version.lucene>
    <version.parboiled-java>1.1.6</version.parboiled-java>
    <version.pdfbox>1.8.3</version.pdfbox>
    <version.poi>3.9</version.poi>
    <version.RegularExpressionAnnotator>2.3.1</version.RegularExpressionAnnotator>
    <version.rollup-4.1_ism-6>1</version.rollup-4.1_ism-6>
    <version.util>0.1-0</version.util>
    <version.ism-rollup>3.0-10</version.ism-rollup>
    <version.Saxon-HE>9.4.0.7</version.Saxon-HE>
    <version.slf4j>1.7.5</version.slf4j>
    <version.spring>3.2.5.RELEASE</version.spring>
    <version.spring-ws>2.1.5.RELEASE</version.spring-ws>
    <version.tika>1.4</version.tika>
    <version.tomcat7>7.0.37</version.tomcat7>
    <version.uima>2.4.2</version.uima>
    <version.uimafit>1.4.0</version.uimafit>
    <version.xml-schemas>0.0.1-alpha-8</version.xml-schemas>
  </properties>

  <build>
    <directory>${basedir}/${build.dir.name}</directory>

    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.7</version>
        </plugin>
        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>2.4</version>
        </plugin>
        <plugin>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>2.11</version>
        </plugin>
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>2.5</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.8</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-enforcer-plugin</artifactId>
          <version>1.3.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-failsafe-plugin</artifactId>
          <version>2.16</version>
          <configuration>
            <argLine>${failsafe.argLine}</argLine>
          </configuration>
          <executions>
            <execution>
              <id>integration-test</id>
              <goals>
                <goal>integration-test</goal>
              </goals>
            </execution>
            <execution>
              <id>verify</id>
              <goals>
                <goal>verify</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <artifactId>maven-help-plugin</artifactId>
          <version>2.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.4</version>
        </plugin>
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.6</version>
        </plugin>
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.3</version>
        </plugin>
        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.2.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.16</version>
          <configuration>
            <argLine>${surefire.argLine}</argLine>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-war-plugin</artifactId>
          <version>2.4</version>
        </plugin>
        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.9.1</version>
        </plugin>

        <plugin>
          <groupId>com.github.github</groupId>
          <artifactId>site-maven-plugin</artifactId>
          <version>0.9</version>
        </plugin>

        <plugin>
          <groupId>com.github.goldin</groupId>
          <artifactId>copy-maven-plugin</artifactId>
          <version>0.2.5</version>
        </plugin>

        <plugin>
          <groupId>com.google.code.maven-replacer-plugin</groupId>
          <artifactId>maven-replacer-plugin</artifactId>
          <version>1.4.1</version>
        </plugin>
        <plugin>
          <groupId>com.google.code.maven-replacer-plugin</groupId>
          <artifactId>replacer</artifactId>
          <version>1.5.2</version>
        </plugin>

        <plugin>
          <groupId>com.googlecode.maven-java-formatter-plugin</groupId>
          <artifactId>maven-java-formatter-plugin</artifactId>
          <version>0.4</version>
        </plugin>

        <plugin>
          <groupId>org.apache.felix</groupId>
          <artifactId>maven-bundle-plugin</artifactId>
          <version>2.4.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.portals.jetspeed-2</groupId>
          <artifactId>jetspeed-unpack-maven-plugin</artifactId>
          <version>2.2.2</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.gmaven</groupId>
          <artifactId>gmaven-plugin</artifactId>
          <version>1.5</version>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>appassembler-maven-plugin</artifactId>
          <version>1.6</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.8</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.cargo</groupId>
          <artifactId>cargo-maven2-plugin</artifactId>
          <version>1.4.5</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>1.2.1</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>keytool-maven-plugin</artifactId>
          <version>1.3</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>properties-maven-plugin</artifactId>
          <version>1.0-alpha-2</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>truezip-maven-plugin</artifactId>
          <version>1.1</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>versions-maven-plugin</artifactId>
          <!-- 2.0 has regression: https://jira.codehaus.org/browse/MVERSIONS-201 -->
          <version>1.3.1</version>
          <configuration>
            <generateBackupPoms>false</generateBackupPoms>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>xml-maven-plugin</artifactId>
          <version>1.0</version>
        </plugin>

        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>0.6.3.201306030806</version>
        </plugin>

        <plugin>
          <groupId>org.jvnet.jaxb2.maven2</groupId>
          <artifactId>maven-jaxb2-plugin</artifactId>
          <version>0.8.3</version>
        </plugin>
        <plugin>
          <groupId>org.jvnet.jaxb2.maven2</groupId>
          <artifactId>maven-jaxb21-plugin</artifactId>
          <version>0.8.3</version>
        </plugin>

        <plugin>
          <groupId>org.mortbay.jetty</groupId>
          <artifactId>jetty-maven-plugin</artifactId>
          <version>${version.jetty}</version>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <profiles>
    <!--
      Given version: x.y.z-SNAPSHOT

      | Arguments                   | Output |
      | =========================== | ====== |
      | -Drelease.version=A         | A      |
      | -Drelease.version.postfix=B | x.y.zB |
    -->
    <profile>
      <id>prepare-release</id>
      <properties>
        <release.version.postfix />
        <release.version>${real.project.version}${release.version.postfix}</release.version>
      </properties>
      <build>
        <defaultGoal>validate</defaultGoal>
        <plugins>
          <plugin>
            <groupId>com.google.code.maven-replacer-plugin</groupId>
            <artifactId>replacer</artifactId>
            <executions>
              <execution>
                <id>set-release-build-number</id>
                <phase>validate</phase>
                <goals>
                  <goal>replace</goal>
                </goals>
                <configuration>
                  <basedir>${basedir}</basedir>
                  <includes>
                    <include>pom.xml</include>
                  </includes>
                  <replacements>
                    <replacement>
                      <token>0.0.0-SNAPSHOT</token>
                      <value>${release.version}</value>
                    </replacement>
                  </replacements>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>release</id>
      <build>
        <plugins>
          <!-- Attach sources -->
          <plugin>
            <artifactId>maven-source-plugin</artifactId>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <phase>validate</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <tasks>
                    <delete dir="${built.repo.dir}"/>
                    <mkdir dir="${built.repo.dir}"/>
                  </tasks>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <artifactId>maven-deploy-plugin</artifactId>
            <configuration>
              <altDeploymentRepository>internal.repo::default::file://${built.repo.dir}</altDeploymentRepository>
            </configuration>
          </plugin>

          <plugin>
            <groupId>com.github.github</groupId>
            <artifactId>site-maven-plugin</artifactId>
            <configuration>
              <message>Maven artifacts for ${project.groupId}:${project.artifactId}:${project.version} ~${maven.build.timestamp}</message>
              <noJekyll>true</noJekyll>
              <outputDirectory>${built.repo.dir}</outputDirectory>
              <includes>
                <include>**/*</include>
              </includes>
              <repositoryOwner>KokaLabs</repositoryOwner>
              <repositoryName>mvn-repo</repositoryName>
              <branch>refs/heads/master</branch>
              <path>maven/snapshots</path>
            </configuration>
            <executions>
              <execution>
                <goals>
                  <goal>site</goal>
                </goals>
                <phase>deploy</phase>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>autoformat</id>
      <build>
        <plugins>
          <plugin>
            <groupId>com.googlecode.maven-java-formatter-plugin</groupId>
            <artifactId>maven-java-formatter-plugin</artifactId>
            <executions>
              <execution>
                <id>eclipse-autoformat-java-source-files</id>
                <phase>process-sources</phase>
                <goals>
                  <goal>format</goal>
                </goals>
                <configuration>
                  <configFile>/koka/codequality/eclipse-code-formatter.xml</configFile>
                </configuration>
              </execution>
            </executions>
            <dependencies>
              <dependency>
                <groupId>kokalabs</groupId>
                <artifactId>koka-codequality</artifactId>
                <version>${version.koka-codequality}</version>
              </dependency>
            </dependencies>
          </plugin>
          <plugin>
            <groupId>com.google.code.maven-replacer-plugin</groupId>
            <artifactId>replacer</artifactId>
            <executions>
              <execution>
                <id>cleanup-formatting</id>
                <phase>process-sources</phase>
                <goals>
                  <goal>replace</goal>
                </goals>
                <configuration>
                  <basedir>${basedir}</basedir>
                  <includes>
                    <include>src/**/*.java</include>
                    <include>src/**/*.txt</include>
                    <include>src/**/*.xml</include>
                    <include>src/**/*.xsd</include>
                    <include>src/**/*.xsl</include>
                    <include>pom.xml</include>
                  </includes>

                  <regex>true</regex>

                  <replacements>
                    <!-- Trailing whitespace -->
                    <replacement>
                      <token>(?m)[ \t\r]+$</token>
                      <value></value>
                    </replacement>
                    <!-- Insert new line at end of file if doesn't exist -->
                    <replacement>
                      <token>(?&lt;!\n)$</token>
                      <value>\n</value>
                      <unescape>true</unescape>
                    </replacement>
                    <!-- Collapse multiple new line at EOF to 1 -->
                    <replacement>
                      <token>\n+$</token>
                      <value>\n</value>
                      <unescape>true</unescape>
                    </replacement>
                  </replacements>
                </configuration>
              </execution>
              <execution>
                <id>cleanup-java-braces</id>
                <phase>process-sources</phase>
                <goals>
                  <goal>replace</goal>
                </goals>
                <configuration>
                  <basedir>${basedir}</basedir>
                  <includes>
                    <include>src/**/*.java</include>
                  </includes>

                  <regex>true</regex>

                  <replacements>
                    <!-- Empty lines after brace -->
                    <replacement>
                      <token>(?m)(?&lt;=\{\n)\n+</token>
                      <value></value>
                    </replacement>
                    <!-- Empty lines before brace -->
                    <replacement>
                      <token>(?m)(?&lt;=\n)\n+(?=\s*\})</token>
                      <value></value>
                    </replacement>
                  </replacements>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>codequality</id>
      <properties>
        <codequality.phase>compile</codequality.phase>
      </properties>
    </profile>

    <profile>
      <id>eclipse-specific-checkstyle-settings</id>
      <activation>
        <property>
          <name>m2e.version</name>
        </property>
      </activation>
      <properties>
        <codequality.phase>compile</codequality.phase>
        <checkstyle.includes>(?&lt;=src/(main|test)/java/)**/*.java</checkstyle.includes>
        <checkstyle.propertyExpansion>checkstyle.suppressions.file=${config_loc}/koka-codequality-${version.koka-codequality}-checkstyle-suppressions.xml</checkstyle.propertyExpansion>
      </properties>
    </profile>

    <!-- Generates code coverage metrics. -->
    <profile>
      <id>prepare-for-sonar</id>
      <properties>
        <surefire.argLine.additional>${jacoco.agent.argLine}</surefire.argLine.additional>
        <failsafe.argLine.additional>${jacoco.itAgent.argLine}</failsafe.argLine.additional>
      </properties>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>jacoco-unit</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <configuration>
                  <propertyName>jacoco.agent.argLine</propertyName>
                  <destFile>${jacoco.report.tests}</destFile>
                </configuration>
              </execution>
              <execution>
                <id>jacoco-it</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
                <configuration>
                  <propertyName>jacoco.itAgent.argLine</propertyName>
                  <destFile>${jacoco.report.itests}</destFile>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>sonar</id>
      <properties>
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.core.codeCoveragePlugin>jacoco</sonar.core.codeCoveragePlugin>
        <sonar.jacoco.reportPath>${jacoco.report.tests}</sonar.jacoco.reportPath>
        <sonar.jacoco.itReportPath>${jacoco.report.itests}</sonar.jacoco.itReportPath>
        <sonar.java.source>${maven.compiler.source}</sonar.java.source>

        <!-- replace with project specific module names -->
        <sonar.skippedModules />
      </properties>
    </profile>
  </profiles>
</project>
